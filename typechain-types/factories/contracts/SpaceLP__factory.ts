/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { SpaceLP, SpaceLPInterface } from "../../contracts/SpaceLP";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract SpaceCoin",
        name: "_spaceCoin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "spcOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "ethOut",
        type: "bool",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "spcOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethOut",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "ethPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "getMin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spaceCoin",
    outputs: [
      {
        internalType: "contract SpaceCoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spcPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isETHtoSPC",
        type: "bool",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cbf38038062001cbf83398101604081905262000034916200016f565b6040518060400160405280600881526020016705370616365204c560c41b815250604051806040016040528060038152602001620534c560ec1b815250816003908051906020019062000089929190620000c9565b5080516200009f906004906020840190620000c9565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001de565b828054620000d790620001a1565b90600052602060002090601f016020900481019282620000fb576000855562000146565b82601f106200011657805160ff191683800117855562000146565b8280016001018555821562000146579182015b828111156200014657825182559160200191906001019062000129565b506200015492915062000158565b5090565b5b8082111562000154576000815560010162000159565b6000602082840312156200018257600080fd5b81516001600160a01b03811681146200019a57600080fd5b9392505050565b600181811c90821680620001b657607f821691505b60208210811415620001d857634e487b7160e01b600052602260045260246000fd5b50919050565b611ad180620001ee6000396000f3fe6080604052600436106101485760003560e01c80636c19f1c0116100c0578063a9059cbb11610074578063e48575d411610059578063e48575d4146103ac578063f16673a4146103fe578063f340fa011461041457600080fd5b8063a9059cbb14610339578063dd62ed3e1461035957600080fd5b806395d89b41116100a557806395d89b41146102f1578063a278d03614610306578063a457c2d71461031957600080fd5b80636c19f1c01461029857806370a08231146102ae57600080fd5b806318160ddd11610117578063313ce567116100fc578063313ce5671461023a578063395093511461025657806351cff8d91461027657600080fd5b806318160ddd1461020557806323b872dd1461021a57600080fd5b806306fdde03146101545780630902f1ac1461017f578063095ea7b3146101a75780630fd95db5146101d757600080fd5b3661014f57005b600080fd5b34801561016057600080fd5b50610169610427565b6040516101769190611781565b60405180910390f35b34801561018b57600080fd5b5060065460075460408051928352602083019190915201610176565b3480156101b357600080fd5b506101c76101c236600461181d565b6104b9565b6040519015158152602001610176565b3480156101e357600080fd5b506101f76101f2366004611847565b6104d3565b604051908152602001610176565b34801561021157600080fd5b506002546101f7565b34801561022657600080fd5b506101c7610235366004611869565b6104e6565b34801561024657600080fd5b5060405160128152602001610176565b34801561026257600080fd5b506101c761027136600461181d565b61050a565b34801561028257600080fd5b506102966102913660046118a5565b610556565b005b3480156102a457600080fd5b506101f760065481565b3480156102ba57600080fd5b506101f76102c93660046118a5565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b3480156102fd57600080fd5b5061016961080b565b6101f76103143660046118d1565b61081a565b34801561032557600080fd5b506101c761033436600461181d565b610cdf565b34801561034557600080fd5b506101c761035436600461181d565b610db5565b34801561036557600080fd5b506101f7610374366004611908565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b3480156103b857600080fd5b506005546103d99073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610176565b34801561040a57600080fd5b506101f760075481565b6102966104223660046118a5565b610dc3565b6060600380546104369061193b565b80601f01602080910402602001604051908101604052809291908181526020018280546104629061193b565b80156104af5780601f10610484576101008083540402835291602001916104af565b820191906000526020600020905b81548152906001019060200180831161049257829003601f168201915b5050505050905090565b6000336104c7818585610fc0565b60019150505b92915050565b60006104df8383611174565b9392505050565b6000336104f485828561118c565b6104ff858585611263565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906104c790829086906105519087906119be565b610fc0565b3060009081526020819052604081205460025490919060065461057990846119d6565b6105839190611a13565b9050600061059060025490565b60075461059d90856119d6565b6105a79190611a13565b90506105b330846114d2565b6005546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152839173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561061c57600080fd5b505afa158015610630573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106549190611a4e565b61065e9190611a67565b6006556005546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152602482018590529091169063a9059cbb90604401602060405180830381600087803b1580156106d557600080fd5b505af11580156106e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070d9190611a7e565b506107188147611a67565b60075560405160009073ffffffffffffffffffffffffffffffffffffffff86169083908381818185875af1925050503d8060008114610773576040519150601f19603f3d011682016040523d82523d6000602084013e610778565b606091505b50509050806107b3576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518481526020810184905273ffffffffffffffffffffffffffffffffffffffff8716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a25050505050565b6060600480546104369061193b565b60008082156109b857600060065460075461083591906119d6565b905060006108434783611a13565b90506000816006546108559190611a67565b476007556005546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a811660048301526024820184905292965086935091169063a9059cbb90604401602060405180830381600087803b1580156108d257600080fd5b505af11580156108e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090a9190611a7e565b506005546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b15801561097457600080fd5b505afa158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac9190611a4e565b60065550610c86915050565b6005546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015610a2257600080fd5b505afa158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a9190611a4e565b90506000600654600754610a6e91906119d6565b6005546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925060009173ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015610add57600080fd5b505afa158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b159190611a4e565b610b1f9083611a13565b9050600081600754610b319190611a67565b6005546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015291925073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015610b9b57600080fd5b505afa158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd39190611a4e565b600655610be08147611a67565b600755604051909450849060009073ffffffffffffffffffffffffffffffffffffffff8a169083908381818185875af1925050503d8060008114610c40576040519150601f19603f3d011682016040523d82523d6000602084013e610c45565b606091505b5050905080610c80576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505b60408051828152841515602082015273ffffffffffffffffffffffffffffffffffffffff8616917f0be2a577cc72fce33274216b1b94836dcc6c24a7967788edcdd7dca86d455ba6910160405180910390a29392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610da8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104ff8286868403610fc0565b6000336104c7818585611263565b6005546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015610e2d57600080fd5b505afa158015610e41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e659190611a4e565b9050600047905060008060075483610e7d9190611a67565b9050600060065485610e8f9190611a67565b9050610e9a60025490565b610eaf57610ea882826104d3565b9250610f06565b6000610eba60025490565b600754610ec790856119d6565b610ed19190611a13565b90506000610ede60025490565b600654610eeb90856119d6565b610ef59190611a13565b9050610f0182826104d3565b945050505b6005546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015610f6f57600080fd5b505afa158015610f83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa79190611a4e565b60065547600755610fb8868461168e565b505050505050565b73ffffffffffffffffffffffffffffffffffffffff8316611062576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610d9f565b73ffffffffffffffffffffffffffffffffffffffff8216611105576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610d9f565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000818310156111855750816104cd565b50806104cd565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461125d5781811015611250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610d9f565b61125d8484848403610fc0565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316611306576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610d9f565b73ffffffffffffffffffffffffffffffffffffffff82166113a9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610d9f565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020548181101561145f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610d9f565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361125d565b73ffffffffffffffffffffffffffffffffffffffff8216611575576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610d9f565b73ffffffffffffffffffffffffffffffffffffffff82166000908152602081905260409020548181101561162b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610d9f565b73ffffffffffffffffffffffffffffffffffffffff83166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101611167565b73ffffffffffffffffffffffffffffffffffffffff821661170b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610d9f565b806002600082825461171d91906119be565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156117ae57858101830151858201604001528201611792565b818111156117c0576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461181857600080fd5b919050565b6000806040838503121561183057600080fd5b611839836117f4565b946020939093013593505050565b6000806040838503121561185a57600080fd5b50508035926020909101359150565b60008060006060848603121561187e57600080fd5b611887846117f4565b9250611895602085016117f4565b9150604084013590509250925092565b6000602082840312156118b757600080fd5b6104df826117f4565b80151581146118ce57600080fd5b50565b600080604083850312156118e457600080fd5b6118ed836117f4565b915060208301356118fd816118c0565b809150509250929050565b6000806040838503121561191b57600080fd5b611924836117f4565b9150611932602084016117f4565b90509250929050565b600181811c9082168061194f57607f821691505b60208210811415611989577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156119d1576119d161198f565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a0e57611a0e61198f565b500290565b600082611a49577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b600060208284031215611a6057600080fd5b5051919050565b600082821015611a7957611a7961198f565b500390565b600060208284031215611a9057600080fd5b81516104df816118c056fea26469706673582212208ede606a0835ab06473888175a966f40c744a1bfa4661da5cc3138d5ecc4cf1b64736f6c63430008090033";

type SpaceLPConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpaceLPConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpaceLP__factory extends ContractFactory {
  constructor(...args: SpaceLPConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _spaceCoin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpaceLP> {
    return super.deploy(_spaceCoin, overrides || {}) as Promise<SpaceLP>;
  }
  override getDeployTransaction(
    _spaceCoin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_spaceCoin, overrides || {});
  }
  override attach(address: string): SpaceLP {
    return super.attach(address) as SpaceLP;
  }
  override connect(signer: Signer): SpaceLP__factory {
    return super.connect(signer) as SpaceLP__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpaceLPInterface {
    return new utils.Interface(_abi) as SpaceLPInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpaceLP {
    return new Contract(address, _abi, signerOrProvider) as SpaceLP;
  }
}
